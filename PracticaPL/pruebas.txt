#CAMBIOS CON RESPECTO A LA PRACTICA 1 Y EJEMPLOS PROPUESTOS

-> AÑADIMOS
+ Se han añadido los structs.
+ Se ha añadido el operador modulo.

-> CAMBIAMOS
+ Las instrucciones ahora terminan en ; no en salto de linea.
+ El tamaño de los vectores ahora se declara despues del identificador, no antes. Por algun motivo da error de la otra manera.

-> ELIMINAMOS
- Se omiten los caracteres (_ ¬ ~) como caracter inicial de los identificadores.

-> EJEMPLOS

- Primer ejemplo de la practica 1

int numeroPrimos(int v[N]){
	int resultado = 0;
	int i = 0;
	while (i < N) do {
		if (esPrimo(v[i])) then {
			resultado = resultado + 1;
		}
		i = i + 1;
	}
	return resultado;
}

boolean esPrimo(int n){
	int i = 2;
	boolean resultado = true;
	while ((i < n) & resultado) do {
		#en el caso de que n%i sea 0 , entonces el numero no es primo
		resultado = resultado & ( n % i != 0);
		i = i + 1;
	}
	return resultado;
}

- Segundo ejemplo de la practica 1

proc controlador (int decision){
	int vect[10] = {2, 7, 13, 4, 6, 23, 7, 8, 20, 50};
	switch(decision){
		case 1 then {
		vect[1] = 6;
		}
		case 2 then {
		vect[2] = 14;
		}
		case 3 then {
		vect[3] = 5;
		}
		default {
			#El valor decision no deberia valer algo que no sea 1 , 2 o 3 .
		}
	}
	int resultado = numeroPrimos(vect);
}

- Tercer ejemplo: probando todas las instrucciones posibles

if(x < y | true & funcionExpresion(x, y, v[2])) then{
	x = true;
}
else{
	int y = 1;
}

while(true) do{
	a = b;
}

switch(a){
	case 1 then{	
		int x[5][1][7] = {1,2,3,4,5,6,7,8,9};
	}
	default{
		boolean ej2 = false;
	}
}

struct{
	int declaracion1;
	const boolean declaracion2 = true;
	const int declaracion3[1] = 1;
}nombreDelStruct;

proc procedimientoEjemplo(){
	int x = funcionEjemplo(x, y, z);
	procedimientoEjemplo();
}

boolean declaracionFuncion(boolean declarada, int x, boolean v[2][3]){
	return declarada;
}

- Cuarto ejemplo: probando exhaustivamente y casos patogenos

int x[4][2][3][9][3][1] = {1,2,3,4,45,5,4324,342,2,3,4,325,1,3,1,1};
y.a.b.c.d.e.f = 2;
y[2].x[6].w.a[1][3][5].z = true;
1 = 2;
